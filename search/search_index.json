{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ondroid - The Open Source Humanoid Robot","text":""},{"location":"#see-our-github-here","title":"See our GitHub Here","text":""},{"location":"#join-our-discord","title":"Join our Discord","text":""},{"location":"#contribute","title":"Contribute","text":"<p>Read the Getting Started documentation for how you can contribute to the project.</p>"},{"location":"contritube/","title":"Contritube","text":"<p>'''</p>"},{"location":"contritube/#contribute","title":"Contribute","text":""},{"location":"contritube/#using-mkdocs","title":"Using MKDocs","text":""},{"location":"contritube/#equations-latex-syntax","title":"Equations - LaTeX Syntax","text":"<p>Use $$ to start and end LaTeX notation:</p> <pre><code>$$\n\n\\sum T_{A_\\circlearrowright} = \\beta \\cong -T_{mp} - T_{M_3} - T_{M_2} - T_{m_1} + T_{\\text{Motor}}\n\n$$\n</code></pre> <p>Renders as:</p> \\[ \\sum T_{A_\\circlearrowright} = 0 = -T_{mp} - T_{M_3} - T_{M_2} - T_{m_1} + T_{\\text{Motor}} \\]"},{"location":"glossary/","title":"Definitions","text":"<p>Component: A part or assembly. Components can contain other components. A component can be a single part.</p> <p>Part: The most basic component which consists of only itself. </p> <p>Assembly: Traditional parlance for ondroid Component.</p> <p>Mechanical Design: Concept design of parts and assemblies. Also known as design, machine design, or mechanism design.</p> <p>Non-flight: Hardware or software that is not utilized in deployment. Example: a load bearing frame used in testing, or a charging dock. In general, anything that is not a part of the robot during use. Equivalent in Aerospace: GSE (Ground Support Equipment).</p> <p>Commercial Off TheShelf: Items purchased from vendors that are not manufactured by the project.</p>"},{"location":"glossary/#acronyms","title":"Acronyms","text":"<p>Acroynms have a space before and after to aid in search.</p> <p> TLA - Top Level Assembly (Top Level Component) </p> <p> TLC - Top Level Component (The same as TLA)</p> <p> FBD - Free Body Diagram</p> <p> DOF - Degree of Freedom</p> <p> BOM - Bill of Materials</p> <p> IK - Inverse Kinematics</p> <p> COTS - Commercial Off The Shelf</p>"},{"location":"analysis/","title":"Analysis","text":"<p>There is an important distinction between System and Component level analysis: system analysis generates requirements that drive lower level components.</p>"},{"location":"analysis/#system-level-analysis","title":"System Level Analysis","text":""},{"location":"analysis/#definition","title":"Definition","text":"<p>System level analysis is a comprehensive examination of the entire system, considering all its components, interactions, and the overall functionality. It involves understanding how various parts of the system work together to achieve the desired objectives.</p>"},{"location":"analysis/#purpose","title":"Purpose","text":""},{"location":"analysis/#tla-requirements","title":"TLA Requirements","text":"<p>System level analysis is crucial for developing the overarching architecture and design of a system. This high-level design outlines how different components will interact, the overall system behavior, and the primary functions.</p>"},{"location":"analysis/#validation","title":"Validation","text":"<p>It ensures that all components will be rated for the correct loading conditions once designed. This analysis also identifies potential issues that might arise from the interaction between components.</p>"},{"location":"analysis/#optimization","title":"Optimization","text":"<p>Provides methods to optimize the system as a whole, rather than focusing on individual components. This approach reveals opportunities for reducing weight and increasing performance.</p>"},{"location":"analysis/#what-it-looks-like","title":"What it Looks Like","text":""},{"location":"analysis/#system-level-requirements-gathering","title":"System Level Requirements Gathering","text":"<p>Collecting and defining the system level requirements.</p>"},{"location":"analysis/#system-level-analysis_1","title":"System Level Analysis","text":"<p>Generating FBDs and analyzing them to generate component level requirements.</p>"},{"location":"analysis/#feasibility-studies","title":"Feasibility Studies","text":"<p>Evaluating different design alternatives and their trade-offs to determine the best overall system design.</p>"},{"location":"analysis/#outcome","title":"Outcome","text":"<p>Component level requirements in the form of:</p> <ul> <li>Velocities</li> <li>Accelerations</li> <li>Forces<ul> <li>Magnitudes</li> <li>Components</li> </ul> </li> <li>Constraints</li> <li>Torques<ul> <li>Magnitude</li> <li>Duty Cycle</li> </ul> </li> </ul>"},{"location":"analysis/#component-level-analysis","title":"Component Level Analysis","text":""},{"location":"analysis/#definition_1","title":"Definition","text":"<p>Component level analysis focuses on the detailed examination and design of individual components within the system.</p>"},{"location":"analysis/#purpose_1","title":"Purpose","text":""},{"location":"analysis/#requirement-compliance","title":"Requirement Compliance","text":"<p>Ensuring that each component meets the specific requirements set by the system level analysis. These requirements are often more detailed and precise, addressing the specific needs and constraints of each component.</p>"},{"location":"analysis/#performance-verification","title":"Performance Verification","text":"<p>Verifying that each distinction can perform its intended functions reliably through propagating results upwards to the system level for verification.</p>"},{"location":"analysis/#what-it-looks-like_1","title":"What it Looks Like","text":""},{"location":"analysis/#stress-analysis","title":"Stress Analysis","text":"<p>Breaking down system-level requirements into detailed, component-specific requirements that are then analyzed for highest level stresses using calculation or FEA methods. These are then typically compared with material yield strengths to generate factors of safety.</p>"},{"location":"analysis/#motor-analysis","title":"Motor Analysis","text":"<p>Calculations that validate the performance of motors and other powertrain components.</p>"},{"location":"analysis/#testing-and-validation","title":"Testing and Validation","text":"<p>Developing tests to validate that components meet their design specifications and performance criteria. This can include failure testing, reliability testing, and other types of tests.</p>"},{"location":"analysis/#outcome_1","title":"Outcome","text":"<p>The outcome of component level analysis is a set of detailed analyses and specifications for each component, along with analysis results and documentation. These components can then be individually manufactured, prototyped, and implemented.</p>"},{"location":"analysis/arms/","title":"Arms Analysis","text":""},{"location":"analysis/arms/arm%2C%20L/","title":"Arm, L Analysis","text":""},{"location":"analysis/arms/arm%2C%20L/notebook/","title":"Arm Calculations, L, 1","text":"In\u00a0[2]: Copied! <pre># Base Libraries assumed for all Ondroid projects\nimport matplotlib, numpy, yaml\nfrom IPython import display\n</pre> # Base Libraries assumed for all Ondroid projects import matplotlib, numpy, yaml from IPython import display  In\u00a0[7]: Copied! <pre>'''\n\nDraw the torques acting on the shoulder joint\n\n'''\n\ndisplay.Image('FBDs/rightArmFBD1.PNG')\n</pre> '''  Draw the torques acting on the shoulder joint  '''  display.Image('FBDs/rightArmFBD1.PNG') Out[7]: In\u00a0[8]: Copied! <pre>'''\n\nSum all torques about point A\n\n\n'''\n\ndisplay.Image('FBDs/rightArmFBD2.PNG')\n</pre> '''  Sum all torques about point A   '''  display.Image('FBDs/rightArmFBD2.PNG') Out[8]: In\u00a0[9]: Copied! <pre>'''\n\nFor initial torque calculations and to summarize the torque required at the shoulder motor under worst case load,\n    we can remove the acceleration torques from equation one and consider the system in static loading.\n\n'''\n\ndisplay.Image('FBDs/rightArmFBD3.PNG')\n</pre> '''  For initial torque calculations and to summarize the torque required at the shoulder motor under worst case load,     we can remove the acceleration torques from equation one and consider the system in static loading.  '''  display.Image('FBDs/rightArmFBD3.PNG') Out[9]: In\u00a0[11]: Copied! <pre>'''\n\nSolve for torques only\n\n'''\n\ndisplay.Image('FBDs/rightArmFBD4.PNG')\n</pre> '''  Solve for torques only  '''  display.Image('FBDs/rightArmFBD4.PNG') Out[11]: In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"analysis/materials/materialSelection/matCompare/","title":"Material Selection","text":"In\u00a0[2]: Copied! <pre>import pandas as pd\nimport matplotlib.pyplot as plt\n</pre> import pandas as pd import matplotlib.pyplot as plt In\u00a0[3]: Copied! <pre># Load the Excel file\ndata_path = 'matData.csv'  # Update with your file path\ndf = pd.read_csv(data_path)\n</pre> # Load the Excel file data_path = 'matData.csv'  # Update with your file path df = pd.read_csv(data_path) In\u00a0[4]: Copied! <pre># Extracting relevant columns for the chart\nmaterial_names = df['material']\nyield_strengths = df['yield']\ncosts = df['cost']\nyoung = df['youngModulus']\ndensity = df['density']\n\n# Calculate Specific Strengths\nspecificStrengths = yield_strengths / density\n</pre> # Extracting relevant columns for the chart material_names = df['material'] yield_strengths = df['yield'] costs = df['cost'] young = df['youngModulus'] density = df['density']  # Calculate Specific Strengths specificStrengths = yield_strengths / density In\u00a0[5]: Copied! <pre># Create the scatter plot using Matplotlib\nplt.figure(figsize=(12, 8))\n\n# Plot each point with a unique label\nfor material, x, y in zip(material_names, costs, young):\n    plt.scatter(x, y)\n    plt.text(x, y, material, fontsize=9, ha='left')\n\nplt.xlabel('Cost')\nplt.ylabel('Yield Strength (ksi)')\nplt.title('Yield Strength vs. Cost of Materials')\nplt.grid(True)\nplt.tight_layout()\n\n# Display the chart\nplt.show()\n</pre> # Create the scatter plot using Matplotlib plt.figure(figsize=(12, 8))  # Plot each point with a unique label for material, x, y in zip(material_names, costs, young):     plt.scatter(x, y)     plt.text(x, y, material, fontsize=9, ha='left')  plt.xlabel('Cost') plt.ylabel('Yield Strength (ksi)') plt.title('Yield Strength vs. Cost of Materials') plt.grid(True) plt.tight_layout()  # Display the chart plt.show() In\u00a0[6]: Copied! <pre># Create the scatter plot using Matplotlib\nplt.figure(figsize=(12, 8))\n\n# Plot each point with a unique label\nfor material, x, y in zip(material_names, costs, young):\n    plt.scatter(x, y)\n    plt.text(x, y, material, fontsize=9, ha='left')\n\nplt.xlabel('Cost ($/lb)')\nplt.ylabel(\"Young's Modulus (E^6 PSI)\")\nplt.title(\"Young's Modulus vs. Cost of Materials\")\nplt.grid(True)\nplt.tight_layout()\n\n# Display the chart\nplt.show()\n</pre> # Create the scatter plot using Matplotlib plt.figure(figsize=(12, 8))  # Plot each point with a unique label for material, x, y in zip(material_names, costs, young):     plt.scatter(x, y)     plt.text(x, y, material, fontsize=9, ha='left')  plt.xlabel('Cost ($/lb)') plt.ylabel(\"Young's Modulus (E^6 PSI)\") plt.title(\"Young's Modulus vs. Cost of Materials\") plt.grid(True) plt.tight_layout()  # Display the chart plt.show()"},{"location":"analysis/materials/materialSelection/matCompare/#material-selection","title":"Material Selection\u00b6","text":"<p>The purpose of this analysis is to provide a baseline comparison of readily available materials for selection by engineers working on the project.</p> <p>This comparison of materials is not exhaustive. Please submit a PR if you would like to add a material or contribute to the accuracy of the existing database.</p>"},{"location":"analysis/materials/materialSelection/matCompare/#use","title":"Use\u00b6","text":"<p>Use the charts below to compare material strength (chart 1) and stiffness (chart 2) against cost per mass of materials.</p>"},{"location":"analysis/materials/materialSelection/matCompare/#recommendations","title":"Recommendations\u00b6","text":"<p>In general, Aluminum is recommended as the default material choice for the project for:</p> <ol> <li>Weight to strength ratio</li> <li>Cost effectiveness</li> <li>Corrosion resistance in the untreated condition</li> <li>Electrical insulation in the untreated condition</li> <li>Thermal conductivity</li> </ol> <p>For cases where Aluminum is not appropriate (high strain where stiffness is required), stainless is recommended.</p>"},{"location":"analysis/materials/materialSelection/matCompare/#fdm-plastics","title":"FDM Plastics\u00b6","text":"<p>These are allowed on the project, but recommended for use only on non-flight parts.</p>"},{"location":"analysis/materials/materialSelection/matCompare/#todo","title":"TODO:\u00b6","text":"<ol> <li>Crash course on why FDM is avoided on the project</li> </ol>"},{"location":"delta/delta-00/","title":"Delta - The Actually Open Source Three Axis Robot","text":"<p>Inspired by a tweet by Kenneth Cassel, the ondroid Delta is three axis robot powered by three stepper motors.</p> <p>At $2,100 USD, the robot is affordable relative to the current market, but has room to improve. </p>"},{"location":"delta/delta-00/#contribute","title":"Contribute","text":"<p>Delta, like the main ondroid project, needs engineers to help design it.</p> <p>Go to Getting Started to see how you can be a part of the project.</p>"},{"location":"delta/delta-00/#cad-files","title":"CAD Files","text":"<p>CAD can be found at the Github, here: https://github.com/emoshou/ondroid/tree/main/CAD/delta-00</p>"},{"location":"design/","title":"Components - Parts &amp; Assemblies","text":"<p>For the context of this project, all parts and assemblies are referred to as \"Components\". The project does not distinguish between Parts and Assemblies. Components can live within other components.</p>"},{"location":"design/componentNaming/","title":"Component Naming &amp; Numbering","text":""},{"location":"design/componentNaming/#component-number-scheme","title":"Component Number Scheme","text":"<p>Part names follow the following format:</p> <pre><code>XXXXXX-YYYYYY-ZZZZZZ-WWWWWW-NN\n</code></pre> <p>Where:</p> <ul> <li>X (first column) is the parent component number</li> <li>Y (second column) is the component name</li> <li>Z (third column) is the component number</li> <li>W (fourth column) is the material</li> <li>N (fourth column) is the part revision</li> </ul>"},{"location":"design/componentNaming/#rules","title":"Rules","text":"<ul> <li>The letter M is reserved for signifying parts that are mirrored</li> <li>Material Column Special Cases<ul> <li>COTS - Used to signify a COTS item (motors,hardware,etc)</li> <li>ASSY - Signifies assemblies</li> </ul> </li> <li>Parts at base revision (no revision) start at 00</li> </ul>"},{"location":"design/componentNaming/#legal-cns","title":"Legal CNs","text":"<ul> <li>A1-SHRD-1-A6T6-0</li> <li>0000-BOTTOMPLATE1-0004\u2013ALU5052H32-00<ul> <li>This a child of component 0000, is a plate, is made of Aluminum 5052-H32 and its PN is 0004 at revision 0</li> </ul> </li> <li>0000-TOPPLATE1-0002\u2013AL5052H32-08<ul> <li>This a child of component 0000, is a plate, is made of Aluminum 5052-H32 and its PN is 0002 at revision 8</li> </ul> </li> </ul>"},{"location":"design/componentNaming/#illegal-cns","title":"Illegal CNs","text":"<ul> <li>A1-SHRD-001-0<ul> <li>Incorrect number of columns. Revision number does not have a zero prefix</li> </ul> </li> </ul>"},{"location":"design/conceptDesign/","title":"Concept Design","text":""},{"location":"design/constraints/","title":"Design Constraints","text":""},{"location":"design/constraints/#materials","title":"Materials","text":"<p>Aluminum and stainless preferred.</p> <p>Plastics (except for bearings or cowlings) are disqualified until the project can source anisotropic materials analysts (go to Contribute if that describes you!)</p>"},{"location":"design/constraints/#general-engineering","title":"General Engineering","text":"<ul> <li>Design for sheet metal manufacturing (CNC Laser, Waterjet, press braking, etc.). Machined parts that require CNC are likely to be rejected in PRs (exceptions made for actuator components)</li> </ul>"},{"location":"design/constraints/#welding","title":"Welding","text":"<p>Welding is not permitted for Aluminum as it more than halves the allowable yield stress of the material.</p> <p>Welding Steel is permitted, provided it takes place at manufacture and not assembly (in situ).</p>"},{"location":"devops/","title":"DevOps","text":"<p>There are two flavors of DevOps: software, and mechanical.</p>"},{"location":"devops/#software-devops","title":"Software DevOps","text":"<p>Software DevOps is the term DevOps typically applies to.</p>"},{"location":"devops/#mechanical-devops","title":"Mechanical DevOps","text":"<p>Mechanical DevOps is a term we're developing to encompass:</p> <ul> <li>CAD Software<ul> <li>Allowed modeling methods</li> <li>Allowed softwares &amp; Licenses</li> <li>Assembly methodology<ul> <li>Constraints</li> <li>Placement</li> </ul> </li> <li>Drawing Methods and Standards</li> <li>File Management</li> <li>Diffing</li> </ul> </li> <li>FEA Software</li> <li>Calculation Software</li> </ul>"},{"location":"devops/mechanical/","title":"Mechanical DevOps","text":""},{"location":"devops/mechanical/cad/","title":"CAD","text":""},{"location":"devops/mechanical/cad/#official-project-cad-package","title":"Official Project CAD Package","text":"<p>The official CAD software of ondroid is Ondsel (a FreeCAD derivative). Ondsel files are backwards compatible with FreeCAD, so in the case you'd prefer using FreeCAD, you're able to open files with it but without the assembly functionality.</p>"},{"location":"devops/mechanical/cad/#check-if-your-cad-package-is-allowed","title":"Check if your CAD Package is Allowed","text":""},{"location":"devops/mechanical/cad/#assemblies","title":"Assemblies","text":"<p>Assembly owners are responsible for managing part PRs and placement recommended by the engineers designing parts.</p>"},{"location":"devops/mechanical/cad/#part-placement","title":"Part Placement","text":"<p>Parts can be drawn in any orientation. Their position is controlled at the assembly they reside in.</p>"},{"location":"devops/mechanical/cadPackages/","title":"Allowed Packages","text":""},{"location":"devops/mechanical/cadPackages/#can-i-use-another-software-package","title":"Can I use another software package?","text":"<p>Yes - as long as it is licensed for unrestricted commercial use. </p> <p>Example; Fusion360 is not allowed (unless you pay for it). The free version does not allow for unrestricted commercial use.</p>"},{"location":"devops/mechanical/cadPackages/#this-sounds-silly-why-cant-i-use-free-software","title":"This Sounds Silly - why can't I use Free Software?","text":"<p>ondroid is Open Source under an Open Source license, but our license allows for unrestricted commercial use. By using free offerings of commercial CAD software without unrestricted commercial licensing, you jeopardize your work being removed from the project or worse, opening the project up to legal issues.</p>"},{"location":"devops/mechanical/cadPackages/#list-of-unapproved-cad-packages","title":"List of Unapproved CAD Packages","text":"<ul> <li>Shapr3D Free Version</li> <li>Fusion 360 Free Version (Autodesk Fusion for personal use)</li> <li>Solidworks Maker<ul> <li>This is not an unlimited commercial license, as it has a cap of $2k/year revenue attached to the license. This makes it a commercial, but not an unrestricted commercial license</li> </ul> </li> <li>Siemens NX Student</li> </ul>"},{"location":"devops/mechanical/cadPackages/#list-of-approved-cad-packages","title":"List of Approved CAD Packages","text":"<p>This is not a definitive list but only provided to offer guidance:</p> <ul> <li>Shapr3D (Commercial License)</li> <li>Solidworks</li> <li>Fusion 360 (Commercial License)</li> <li>FreeCAD</li> <li>Plasticity</li> </ul>"},{"location":"devops/mechanical/pdm/","title":"PDM","text":""},{"location":"devops/mechanical/pdm/#cad-data-storage-and-management","title":"CAD Data Storage and Management","text":"<p>Unfortunately, there are no open source projects dedicated to the storage and manipulation of CAD data. Paid options such as Teamcenter, Windchill or Solidworks PDM are either paid at unobtainable prices for an open source project, or locked to their CAD platform.</p> <p>ondroid uses GitHub to store CAD binaries. There are options being explored to utilize Zoo's STP diffing functionality.</p>"},{"location":"devops/software/","title":"Software DevOps","text":""},{"location":"devops/software/#language","title":"Language","text":"<p>Python is the preferred language of the project.</p>"},{"location":"gettingStarted/","title":"Getting Started","text":"<p>Welcome to the project. Check out our Mission (it was important enough to get its own section) to see what we're doing and if you'd like to help.</p>"},{"location":"gettingStarted/#contributing","title":"Contributing","text":""},{"location":"gettingStarted/#join-the-community-on-discord","title":"Join the Community on Discord","text":"<p>We use Discord to communicate.</p>"},{"location":"gettingStarted/#work-on-the-project-in-your-specialty","title":"Work on the Project in your Specialty","text":"<p>I'm a...</p> <p>Mechanical Engineer</p> <p>Lawyer</p> <p>Machinist</p> <p>Software Engineer</p> <p>DevOps Engineer</p> <p>Industrial Designer</p> <p>Frontend Engineer</p> <p>Roboticist</p> <p>Electrical Engineer</p> <p>Layout Engineer</p> <p>None of These Things</p> <p>interested in contributing.</p>"},{"location":"gettingStarted/#mechanical-engineering","title":"Mechanical Engineering","text":"<p>We need to engineer the robot. If you don't know where to start, join the Discord and introduce yourself. We can find something for you to do.</p>"},{"location":"gettingStarted/#lawyer","title":"Lawyer","text":"<p>There is a ton to do - from incorporating non-profits, to, well, everything. This is undiscovered field that needs your help.</p>"},{"location":"gettingStarted/#machinist","title":"Machinist","text":"<p>Help us program CAM, offer DFM and help design things for cost effectiveness generally speaking.</p>"},{"location":"gettingStarted/#software-engineering","title":"Software Engineering","text":"<p>A lot needs to be done. Generalists who want to learn about Computational Geometry, Robotics or ML should join the Discord and pick up tasks (or generate their own).</p>"},{"location":"gettingStarted/#devops-engineer","title":"DevOps Engineer","text":"<p>Mechanical Engineering is an incredibly under-represented section of the engineering disciplines with pretty bad software. We need you to help us glue FreeCAD/Ondsel to various CAD packages, simulation software, and more.</p> <p>We also need to figure out better ways to manage CAD files from deployment and diffing to product life cycle management.</p>"},{"location":"gettingStarted/#industrial-designer","title":"Industrial Designer","text":"<p>Help us make the robot friendly. CAD modelers who don't have an ID background but know how to use surfacing techniques shouldn't be afraid to hop in and assist.</p>"},{"location":"gettingStarted/#frontend-engineer","title":"Frontend Engineer","text":"<p>We barely glued together this MkDocs running on GitHub pages. We need people to help build out a more comprehensive website. We also plan on running the front end through a web interface.</p>"},{"location":"gettingStarted/#roboticist","title":"Roboticist","text":"<p>Join the discord, post papers, and help the Software Engineers understand IK.</p>"},{"location":"gettingStarted/#electrical-engineer","title":"Electrical Engineer","text":"<p>There's a lot to do in the controls department, but even more with motor drivers.</p>"},{"location":"gettingStarted/#generalist","title":"Generalist","text":"<p>Join the discord, chat, read papers, and ask how you can help.</p>"},{"location":"gettingStarted/TODO/","title":"Mechanical Engineering","text":"<ul> <li>Mechanical Concept Design<ul> <li>Open up the TLA, pick a sub-assembly, and start designing.<ul> <li>Join the Discord to work with the other engineers to understand key interfaces and design constraints.</li> </ul> </li> </ul> </li> <li>Actuator Concept Design<ul> <li>Perform engineering analyses to weigh the pros and cons of the following options:<ul> <li>Winch Actuation</li> <li>Hydraulic Actuation</li> <li>DD Actuation</li> </ul> </li> <li>Actuator Placement</li> </ul> </li> <li>Materials Database<ul> <li>Material Comparison<ul> <li>Change current analysis to measure specific strength against cost per pound, not just yield strength</li> </ul> </li> </ul> </li> </ul>"},{"location":"gettingStarted/TODO/#software-engineering","title":"Software Engineering","text":"<ul> <li>Part Number Generator<ul> <li>A front end developer is needed to code the front and back end logic to create a Component Number assignment tool </li> </ul> </li> </ul>"},{"location":"gettingStarted/TODO/#software-devops","title":"Software DevOps","text":"<ul> <li>Write Python script to automatically import and place STP files at part load<ul> <li>Should search the local directory for part numbers based on a BOM</li> </ul> </li> </ul>"},{"location":"gettingStarted/mission/","title":"Mission","text":"<p>Design a full DOF humanoid robot for research use incrementally, halving the cost until the BOM is $1000.</p>"},{"location":"gettingStarted/mission/#nice-to-haves","title":"Nice to Haves","text":"<ol> <li>Educate the public about Engineering and get people excited about it through Robotics</li> <li>Be the most performant humanoid robot available</li> <li>Contribute to Robotics and AI academic research</li> </ol>"},{"location":"system/","title":"System","text":""}]}